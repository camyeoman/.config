function fish_right_prompt

end

function _git_branch_name
  echo (command git symbolic-ref HEAD 2> /dev/null | sed -e 's|^refs/heads/||')
end

function _is_git_dirty
	echo (command git status -s --ignore-submodules=dirty 2> /dev/null)
end

function show_cwd -d "Function to show the current working directory"
  set_color -o cyan
	echo -n (pwd | rg '(?:.*/)?(.[A-z0-9]+)$' -r '$1 ')
  set_color normal
end

function show_git_info -d "Show git branch and dirty state"
  if [ (_git_branch_name) ]
    set -l git_branch '['(_git_branch_name)']'

    set_color -o
    if [ (_is_git_dirty) ]
      set_color -o red
      echo -n "$git_branch√ó "
    else
      set_color -o green
      echo -n "$git_branch "
    end
    set_color normal
  end
end

function show_prompt_char -d "Terminate with a nice prompt char"
  set -q THEME_EDEN_PROMPT_CHAR
    or set -U THEME_EDEN_PROMPT_CHAR '¬ª'
  echo -n -s $normal $THEME_EDEN_PROMPT_CHAR ' '
end

function fish_mode_prompt
    # Do nothing if not in vi mode
    if test "$fish_key_bindings" = "fish_vi_key_bindings"
        switch $fish_bind_mode
            case default
                set_color --bold red
                echo üÖΩ
            case insert
                set_color --bold green
                echo üÖ∏
            case replace
                set_color --bold green
                echo üÜÅ
            case visual
                set_color --bold brmagenta
                echo üÜÖ
        end
				echo -n '  '
        set_color normal
    end
end

## Function to show a segment
function _prompt_segment -d "Function to show a segment"
  # Get colors
  set -l bg $argv[1]
  set -l fg $argv[2]

  # Set 'em
  set_color -b $bg
  set_color $fg

  # Print text
  if [ -n "$argv[3]" ]
    echo -n -s $argv[3]
  end

  # Reset
  set_color -b normal
  set_color normal

  # Print padding
  if [ (count $argv) = 4 ]
    echo -n -s $argv[4]
  end
end

function fish_prompt
  # set fish_greeting

  # The newline before prompts

  show_cwd
  show_git_info
  show_prompt_char

end

function fish_greeting
	clear
	logo
	printf '\n\n'
end
